
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    #default_type  application/json;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    lua_package_path 'nginx01/?.lua;;';




    #init_worker_by_lua_file nginx01/initWorkLua.lua;
    #init_by_lua_file nginx01/initlua.lua;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream  uiserver{
         server 192.168.222.129:80;
    }

    upstream  bkserver{
             server 192.168.222.129:8088;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;



        #access_by_lua_file nginx01/acessIntercept.lua;
        #header_filter_by_lua_file nginx01/rspHeaderFilter.lua;
        #body_filter_by_lua_file  nginx01/rspBody.lua;
        location / {
            #root   html;
            #index  index.html index.htm;

            proxy_pass http://uiserver;
            proxy_set_header Host $host:$server_port;
        }


        location ^~ /fm/{

                    add_header 'Access-Control-Allow-Origin' $http_origin;
            	    add_header 'Access-Control-Allow-Credentials' 'true';
            	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            	    add_header 'Access-Control-Allow-Headers' 'DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            	    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            	    if ($request_method = 'OPTIONS') {
            	    	add_header 'Access-Control-Max-Age' 1728000;
            	    	add_header 'Content-Type' 'text/plain; charset=utf-8';
            	    	add_header 'Content-Length' 0;
            	    	return 204;
            	    }

            proxy_set_header Host $host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            rewrite ^/fm/(.*)$ /$1 break;
            proxy_pass http://bkserver/fm;
        }

        location /test {
            content_by_lua_file  nginx01/test.lua;
        }

        #location /test2 {
        #    content_by_lua_file  nginx01/test2.lua;
        #}
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
